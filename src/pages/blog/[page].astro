---
import { getCollection } from "astro:content";
import Article from "../../components/article.astro";
import PageLayout from "../../components/_page_layout.astro";
import type { GetStaticPathsOptions } from "astro";
import "@pagefind/default-ui/css/ui.css";

export type blogEntry = {
  id: string;
  slug: string;
  body: string;
  collection: string;
  data: {
    emoji: string;
    title: string;
    draft: boolean;
    uploadAt: Date;
    tags: any;
  };
};

export const getStaticPaths = async ({ paginate }: GetStaticPathsOptions) => {
  const entries = (await getCollection("blog")).filter(
    (entry) => !entry.data.draft
  ) as blogEntry[];
  return paginate(entries, { pageSize: 3 });
};

// カレンダー実装用
// const date = new Date();
// const getDaysInMonth = (year: number, month: number) => new Date(year, month, 0).getDate();
// const generateDaysArray = (year: number, month: number) => {
//   const days = getDaysInMonth(year, month);
//   const daysArray = [];
//   for (let i = 1; i <= days; i++) {
//     daysArray.push(i);
//   }
//   return daysArray;
// };

// const days = generateDaysArray(date.getFullYear(), date.getMonth() + 1);
const { page } = Astro.props;
---

<PageLayout title="Blog">
  <div>
    <ul class="mt-10 w-5/6 max-w-4xl space-y-4">
      {page.data.length > 0 && <div class="search" />}
      <script>
        import { PagefindUI } from "@pagefind/default-ui";
        new PagefindUI({
          element: ".search",
          translations: {
            placeholder: "Search",
          }
        });
      </script>
      {
        page.data.length === 0 ? (
          <p>まだ記事が投稿されていません！</p>
        ) : (
          page.data.sort((a, b) => b.data.uploadAt.getTime() - a.data.uploadAt.getTime()).map((blog) => (
            <li>
              <Article
                title={blog.data.title}
                emoji={blog.data.emoji}
                description={blog.body.slice(0, 20)}
                tags={blog.data.tags}
                uploadAt={blog.data.uploadAt.toDateString()}
                charCount={blog.body.length}
                slug={blog.slug}
              />
            </li>
          ))
        )
      }
      {
        page.total != 1 && (
          <div class="join flex justify-center pt-10">
            {page.url.prev && (
              <a class="join-item btn" href={page.url.prev}>
                «
              </a>
            )}
            {(page.url.prev || page.url.next) && (
              <a class="join-item btn">Page {page.currentPage}</a>
            )}
            {page.url.next && (
              <a class="join-item btn" href={page.url.next}>
                »
              </a>
            )}
          </div>
        )
      }
    </ul>
  </div>

  <!-- カレンダー実装用 
      <div class="bg-white rounded-xl ml-56 mt-28">
      <div class="flex items-center justify-between">
        <h1>Nov 2024</h1>
        <button>←</button>
        <button>→</button>
      </div>
      <table>
        <tr>
          <th>Mo</th>
          <th>Tu</th>
          <th>We</th>
          <th>Th</th>
          <th>Fr</th>
          <th>Sa</th>
          <th>Su</th>
        </tr>
        {
          date = new Date()
        }
      </table>
    </div> -->
</PageLayout>
